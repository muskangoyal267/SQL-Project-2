DECLARE DATE_LAG int64;
DECLARE LOAD_DATE DATE;
SET DATE_LAG = 0;
SET LOAD_DATE='2021-12-06';

WITH DATES AS
  (
  SELECT DISTINCT DATE_TRUNC(day, MONTH) day
   FROM UNNEST( GENERATE_DATE_ARRAY('2019-08-01', CURRENT_DATE())) AS day
  ),
  
 
BG1 AS (SELECT HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE FROM(
  SELECT HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, STATUS_CODE, 
ROW_NUMBER() OVER (PARTITION BY HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, STATUS_CODE ORDER BY ACCOMMODATION_CODE ASC, CONTRACT_TYPE ASC, CURR_CONTRACT_DATE DESC) AS RANKS FROM  `leisure-bi.0_SUPPLY_DM.BV_CURRENT_HOUSE_CONTRACT_TYPE`)
  WHERE RANKS=1
    and CONTRACT_TYPE <> 'Unknown' 

  
  
  union all
  select distinct HOUSE_ID ,I.ACCOMMODATION_ID ,I.PROPERTY_CONTRACT_TYPE_OLD 
  FROM `leisure-bi.DM.VRMC_INVENTORY_FLOW` I
  where I.COMPANY ='DANCENTER'
  ),

BG2 AS (#SELECT HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE FROM(
  #SELECT HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, STATUS_CODE, 
#ROW_NUMBER() OVER (PARTITION BY HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, STATUS_CODE ORDER BY ACCOMMODATION_CODE ASC, CONTRACT_TYPE ASC, CURR_CONTRACT_DATE DESC) AS RANKS FROM  `leisure-bi.0_SUPPLY_DM.BV_CURRENT_HOUSE_CONTRACT_TYPE`)
  #WHERE RANKS=1
  
  
  #union all
  select distinct HOUSE_ID ,I.ACCOMMODATION_ID as ACCOMMODATION_CODE ,I.PROPERTY_CONTRACT_TYPE_OLD as CONTRACT_TYPE
  FROM `leisure-bi.DM.VRMC_INVENTORY_FLOW` I
  WHERE SNAP = LOAD_DATE 

  #where I.COMPANY ='DANCENTER'
  ),

AGENT AS (SELECT HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, SALES_AGENT FROM(
  SELECT HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, STATUS_CODE, SALES_AGENT, ROW_NUMBER() OVER (PARTITION BY HOUSE_ID, ACCOMMODATION_CODE, CONTRACT_TYPE, STATUS_CODE ORDER BY ACCOMMODATION_CODE ASC, CONTRACT_TYPE ASC, CURR_CONTRACT_DATE DESC) AS RANKS FROM `leisure-bi.0_YIELD_DM.BV_REVENUE_BODYGUARD_CONTRACT_CHECK`)
  WHERE RANKS=1
  #AND STATUS_CODE = "D"
  ),

HOMES AS
  (
  SELECT DISTINCT HOUSE_ID, ACCOMMODATION_ID AS ACCOMMODATION_CODE , COMPANY, COUNTRY_NAME AS COUNTRY,
    FROM `leisure-bi.DM.VRMC_INVENTORY_FLOW` 
    WHERE SELLABLE = 1
    AND snap =LOAD_DATE
  ),
NEW_HOMES AS 
  (
  SELECT DISTINCT HOUSE_ID, I.ACCOMMODATION_ID, extract(year from  DATE_SUB(snap, INTERVAL 1 DAY))*100+extract(month from DATE_SUB(snap, INTERVAL 1 DAY)) as YEARMON,
  FLOW_L1, FLOW_L2, FLOW_L3
    FROM `leisure-bi.DM.VRMC_INVENTORY_FLOW` I
    where  (snap in (select max(snap) from `leisure-bi.DM.VRMC_INVENTORY_FLOW`) or snap in (select day from (
  SELECT DISTINCT DATE_TRUNC(day, MONTH) day
   FROM UNNEST( GENERATE_DATE_ARRAY('2019-08-01', CURRENT_DATE())) AS day
  ))) 
    and ((FLOW_L1 = 'Add' and FLOW_L2 = 'New' and FLOW_L3 = 'Organic') or
          (FLOW_L1 = 'Add' and FLOW_L2 = 'Existing' and FLOW_L3 = 'Win-back') or
          (FLOW_L1 = 'Add' and FLOW_L2 = 'New' and FLOW_L3 = 'Acquistion')
        )
    and CADENCE = 'MONTHLY' 
    #and PROPERTY_CONTRACT_TYPE in ("FME", "FME2.0")
    and SELLABLE = 1
    and I.HOUSE_ID not like '%US%'
    AND I.ACCOMMODATION_ID IS NOT NULL
  ),
DDATE AS 
(SELECT PropertyCode, Status, ContractType, DDate FROM `leisure-bi.LANDING.DC_ACCOMMODATION_BASIC_*` DC
WHERE DC._TABLE_SUFFIX = FORMAT_DATE('%Y%m%d', DATE_ADD(LOAD_DATE, INTERVAL DATE_LAG DAY))
UNION ALL
SELECT PropertyCode, Status, ContractType, DDate FROM `leisure-bi.LANDING.ACCOMMODATION_BASIC_*`B
WHERE B._TABLE_SUFFIX = FORMAT_DATE('%Y%m%d', DATE_ADD(LOAD_DATE, INTERVAL DATE_LAG DAY))),

BV_ACCO AS (SELECT * FROM `rev-man-leisure.DM.BV_ACCO`),

DCR AS (SELECT house_id, region_1, region_2, region_3, region_4 
FROM `ovh-dynamic-pricing.PUBLIC.DC_REGION`
order by house_id),

ACCO AS (
    SELECT distinct HOUSE_ID, ACCOMMODATION_ID AS ACCOMMODATION_CODE FROM `leisure-bi.1_PROPERTY_DATA.HOUSE_ID_*`A 
    WHERE A._TABLE_SUFFIX = FORMAT_DATE('%Y%m%d', DATE_ADD(LOAD_DATE, INTERVAL DATE_LAG DAY))
    AND IS_ACTIVE = 1
),

FME_FMNE AS (SELECT *, IF(YEARMON = 201901, "STOCK", IF(YEARMON <= 202006, "L1", IF(YEARMON <=202012, "L2", "L3"))) AS ADDS FROM (  
SELECT distinct H.HOUSE_ID, H.ACCOMMODATION_CODE, H.COMPANY, IF(N.YEARMON IS NULL, 201901, N.YEARMON) AS YEARMON, H.COUNTRY,
  IF(N.HOUSE_ID IS NULL,'Stock Homes','New Homes') STOCK, DDATE.Status,
  IF(H.COMPANY = "BELVILLA", BV_ACCO.REGION, DCR.region_2) AS REGION,
  IF(H.COMPANY = "BELVILLA", IF(BV_ACCO.ACCO_DESCRIPTION = "Apartment", "Apartment", "Non-Apartment"), "DC Homes") AS HOME_TYPE,
  ifnull(BG1.CONTRACT_TYPE, BG2.CONTRACT_TYPE) AS CONTRACT_TYPE,
  IF(H.COMPANY = "BELVILLA", AGENT.SALES_AGENT,"-") AS BDM,
  ROW_NUMBER() OVER (PARTITION BY H.HOUSE_ID, H.ACCOMMODATION_CODE ORDER BY H.HOUSE_ID ASC, H.ACCOMMODATION_CODE ASC, YEARMON DESC) AS RANKING,
  N.FLOW_L1, N.FLOW_L2, N.FLOW_L3
    FROM HOMES H
    LEFT JOIN NEW_HOMES N
    ON N.HOUSE_ID = H.HOUSE_ID
    #LEFT JOIN ACCO 
    #ON H.HOUSE_ID = ACCO.HOUSE_ID
    LEFT JOIN DDATE
    ON H.ACCOMMODATION_CODE = DDATE.PropertyCode
    LEFT JOIN BG1
    ON (H.HOUSE_ID = BG1.HOUSE_ID) #AND H.ACCOMMODATION_CODE = BG.ACCOMMODATION_CODE)
    LEFT JOIN BG2
    ON (H.HOUSE_ID = BG2.HOUSE_ID)
    LEFT JOIN BV_ACCO
    ON H.ACCOMMODATION_CODE = BV_ACCO.ACCOMMODATION_CODE
    LEFT JOIN DCR 
    ON H.ACCOMMODATION_CODE = DCR.house_id 
    LEFT JOIN AGENT 
    ON (H.HOUSE_ID = AGENT.HOUSE_ID AND H.ACCOMMODATION_CODE = AGENT.ACCOMMODATION_CODE)
    WHERE H.HOUSE_ID not like '%US%'
    #AND DDATE.Status = "D"
    #AND COMPANY = "BELVILLA"
ORDER BY YEARMON, H.HOUSE_ID)
WHERE CONTRACT_TYPE IN ("FME","FMNE")
AND RANKING = 1),

DC_PREBOOKINGS AS (WITH
  BASE AS (
  SELECT
    RA_ID,
    MIN(book_date) AS min_book_date,
    MAX(book_date) AS max_book_date,
    STRING_AGG(RA_STATUS, ', '
    ORDER BY
      BOOK_DATE) AS ALL_STATUSES,
    COUNT(RA_STATUS) AS COUNT
  FROM
    `leisure-bi.LANDING.DC_BOOKINGS_20211201`
  WHERE
    RA_ID IN (
    SELECT
      -- Filter for booking IDs that are prebookings and precancellations
      DISTINCT RA_ID
    FROM
      `leisure-bi.LANDING.DC_BOOKINGS_*`
    WHERE
      RA_STATUS IN ('prebooking',
        'precancellation')
      AND RA_ID LIKE '2022-%'
      AND _TABLE_SUFFIX >= '20210601')
  GROUP BY
    1 ),
  BASE_1 AS (
  SELECT
    *,
    CASE
      WHEN CURRENCY = 'PDS' THEN 1.1*AMOUNT
      WHEN CURRENCY = 'EUR' THEN AMOUNT
      WHEN CURRENCY = 'DKR' THEN 0.13*AMOUNT
      WHEN CURRENCY = 'NKR' THEN 0.1*AMOUNT
      WHEN CURRENCY = 'SKR' THEN 0.105*AMOUNT
  END
    AS AMOUNT_EUR
  FROM
    `leisure-bi.LANDING.DC_PAYMENTS_20211201` ),
  B_SEL AS (
  SELECT
    RA_ID,
    MAX(BOOK_DATE) AS BOOK_DATE
  FROM
    `leisure-bi.LANDING.DC_BOOKINGS_20211201`
  GROUP BY
    1 ),
  final AS(
  SELECT
    BASE_1.RA_ID,
    B_DET.RA_STATUS AS STATUS,
    ROUND(SUM(CASE
          WHEN (OBJECT_TYPE IN (3, 27, 24, 33, 40, 9, 50)) THEN AMOUNT_EUR
      END
        ), 2) AS BOOKING_AMT,
    ROUND(SUM(CASE
          WHEN OBJECT_GROUP IN (1, 2, 7) OR (OBJECT_TYPE = 24 AND OBJECT_GROUP = 0) THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS TOTAL_AMT,
    ROUND(SUM(CASE
          WHEN OBJECT_GROUP IN (3, 4) THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS CANCEL_AMT,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 6 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS PAID_AMT,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 3 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS RENT,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 105 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS PRODUCTS,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 30 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS SPENDINGS,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE IN (100, 40, 33) THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS CLEANING,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 7 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS BOOKING_FEE,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 24 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS INSURANCE,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 22 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS ILLNESS_INSURANCE,
    ROUND(SUM(CASE
          WHEN OBJECT_TYPE = 9 THEN AMOUNT_EUR
        ELSE
        0
      END
        ), 2) AS DISCOUNT,
  FROM
    BASE_1
  LEFT JOIN (
    SELECT
      RA_ID,
      RA_MASTER,
      RA_STATUS,
    FROM
      `leisure-bi.LANDING.DC_BOOKINGS_20211201`
    INNER JOIN
      B_SEL
    USING
      (RA_ID,
        BOOK_DATE)) B_DET
  ON
    BASE_1.RA_ID = B_DET.RA_ID
  GROUP BY
    1,
    2
  ORDER BY
    1,
    2)
SELECT
  DISTINCT BASE.*,
IF
  (DB.CANCELLATION_TYPE = 'Force Majeure',
    'COVID',
    'CLASSIC') AS TAG,
IF
  (DC_P.RA_ID IS NULL,
    'UNPAID',
    'PAID') AS PAYMENT_STATUS,
  c.book_date_of_booking,
  c.cancellation_date,
  BOOKING_AMT,
  TOTAL_AMT,
  CANCEL_AMT,
  net_GBV
FROM
  BASE
LEFT JOIN
  `leisure-bi.LANDING.DC_BOOKINGS_20211201` DB
ON
  BASE.RA_ID = DB.CONVERTED_TO_ID
LEFT JOIN (
  SELECT
    *
  FROM
    `leisure-bi.LANDING.DC_PAYMENTS_20211201`
  WHERE
    OBJECT_TYPE = 6 ) DC_P
ON
  base.RA_ID = DC_P.RA_ID
LEFT JOIN
  final f
ON
  base.RA_ID=f.RA_ID
LEFT JOIN (
  SELECT
    booking_id,
    SUM(CAST(REVENUE_GROSS_BOOKING_VALUE AS float64)) AS net_gbv
  FROM
    `leisure-bi.DM.VRMC_REVENUE_REPORTING`
  WHERE
    booking_id IN (
    SELECT
      RA_ID
    FROM
      base)
  GROUP BY
    1 ) b
ON
  base.RA_ID=b.BOOKING_ID
LEFT JOIN
  `leisure-bi.DM.VRMC_BOOKINGS_BASE` c
ON
  base.RA_ID=c.BOOKING_ID), 
    
RAW AS
(
SELECT B.HOUSE_ID, B.BOOK_DATE, EXTRACT(YEAR FROM ARRIVAL_DATE) AS ARRIVAL_YEAR, EXTRACT(MONTH FROM ARRIVAL_DATE) AS ARRIVAL_MONTH, 
B.BOOKING_STATUS, FME_FMNE.COMPANY, FME_FMNE.COUNTRY, 
FME_FMNE.STOCK, FME_FMNE.YEARMON, B.CHANNEL_TYPE, B.PARTNER_NAME_GROUP, B.PARTNER_NAME, FME_FMNE.CONTRACT_TYPE,
FME_FMNE.ADDS,
COUNT(DISTINCT BOOKING_ID) AS BOOKING_COUNT,
SUM(DATE_DIFF(DEPARTURE_DATE, ARRIVAL_DATE, DAY)) AS STAY_LEN,
SUM(B.REVENUE_GROSS_BOOKING_VALUE) AS NET_GBV,
SUM(BOOKED_GBV) AS GROSS_GBV


FROM `leisure-bi.DM.VRMC_REVENUE_REPORTING` B
LEFT JOIN FME_FMNE
ON B.HOUSE_ID = FME_FMNE.HOUSE_ID
where B.BOOK_DATE>="2021-12-01" and B.BOOK_DATE<="2021-12-31"
AND BOOKING_ID NOT IN (select RA_ID FROM DC_PREBOOKINGS WHERE TAG = "CLASSIC" AND PAYMENT_STATUS = "UNPAID")
AND B.HOUSE_ID IN (SELECT HOUSE_ID FROM FME_FMNE)
GROUP BY B.HOUSE_ID, B.BOOK_DATE, B.BOOKING_STATUS, FME_FMNE.COMPANY, FME_FMNE.COUNTRY, FME_FMNE.STOCK, FME_FMNE.YEARMON, B.CHANNEL_TYPE, 
B.PARTNER_NAME_GROUP, B.PARTNER_NAME, FME_FMNE.CONTRACT_TYPE, 
FME_FMNE.ADDS, BOOKING_ID, ARRIVAL_YEAR, ARRIVAL_MONTH),

#SELECT * FROM RAW


fold as (SELECT HOUSE_ID, BOOK_DATE, ARRIVAL_YEAR, ARRIVAL_MONTH,BOOKING_STATUS, COMPANY, COUNTRY, STOCK, ADDS
, CONTRACT_TYPE,
ROUND(SUM(NET_GBV),0) AS NET,
ROUND(IFNULL(SUM(CASE WHEN (CHANNEL_TYPE = 'DIR' or CHANNEL_TYPE="CCC") THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS DIR_NET,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS INDIR_NET,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "AIRBNB" THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS ABB_NET,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "BOOKING.COM" THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS BDC_NET,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "HOMEAWAY" THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS HA_NET,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "OTHER" THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS OTHER_NET,

ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' 
AND(PARTNER_NAME = "Feline Holidays ApS" OR PARTNER_NAME = "FELINE HOLIDAYS APS" OR PARTNER_NAME = "FELINE HOLIDAYS APS-ADMIRAL ST" OR PARTNER_NAME = "Feline - Danland")
THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS FELINE_NET,

ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' 
AND(PARTNER_NAME = "FEJO.DK" OR PARTNER_NAME = "FEJO.DK - ADMIRAL STRAND - EUR" OR PARTNER_NAME = "UAB Kelioniu Fejos")
THEN CAST(NET_GBV AS FLOAT64) END),0),0) AS FEJO_NET,

ROUND(SUM(GROSS_GBV),0) AS GROSS,
ROUND(IFNULL(SUM(CASE WHEN (CHANNEL_TYPE = 'DIR' or CHANNEL_TYPE="CCC") THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS DIR_GROSS,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS INDIR_GROSS,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "AIRBNB" THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS ABB_GROSS,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "BOOKING.COM" THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS BDC_GROSS,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "HOMEAWAY" THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS HA_GROSS,
ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' AND PARTNER_NAME_GROUP = "OTHER" THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS OTHER_GROSS,

ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' 
AND(PARTNER_NAME = "Feline Holidays ApS" OR PARTNER_NAME = "FELINE HOLIDAYS APS" OR PARTNER_NAME = "FELINE HOLIDAYS APS-ADMIRAL ST" OR PARTNER_NAME = "Feline - Danland")
THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS FELINE_GROSS,

ROUND(IFNULL(SUM(CASE WHEN CHANNEL_TYPE = 'INDIR' 
AND(PARTNER_NAME = "FEJO.DK" OR PARTNER_NAME = "FEJO.DK - ADMIRAL STRAND - EUR" OR PARTNER_NAME = "UAB Kelioniu Fejos")
THEN CAST(GROSS_GBV AS FLOAT64) END),0),0) AS FEJO_GROSS,
YEARMON
FROM RAW
GROUP BY HOUSE_ID, BOOK_DATE, ARRIVAL_YEAR, ARRIVAL_MONTH, BOOKING_STATUS, STOCK, YEARMON, COMPANY, COUNTRY, CONTRACT_TYPE, ADDS
ORDER BY COUNTRY, YEARMON, ADDS)

select DISTINCT HOUSE_ID, ARRIVAL_MONTH, ARRIVAL_YEAR, IF(ARRIVAL_MONTH<=9, ARRIVAL_YEAR||0||ARRIVAL_MONTH,ARRIVAL_YEAR||ARRIVAL_MONTH) AS ARR_YEARMON, BOOKING_STATUS, COMPANY, COUNTRY, ADDS, CONTRACT_TYPE, NET, DIR_NET, INDIR_NET, ABB_NET, BDC_NET, HA_NET, OTHER_NET, 
FELINE_NET, FEJO_NET, GROSS,  DIR_GROSS,  INDIR_GROSS,  ABB_GROSS,  BDC_GROSS,  HA_GROSS, 
OTHER_GROSS,  FELINE_GROSS, FEJO_GROSS, YEARMON, BOOK_DATE from fold
## --- Main Code ---- ##
#SELECT country, sum(GBV) AS GBV, SUM(GROSS_GBV) AS GROSS_GBV FROM RAW
#where COUNTRY = "Austria"
#group by 1
#order by 1